name: github ci

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ master ]

env:
  POSTGRES_USER: quantiz
  POSTGRES_DB: quantiz
  POSTGRES_PASSWORD: ${{ secrets.POSTGRES_PASSWORD }}
  POSTGRES_PORT: 5432
  POSTGRES_HOST: localhost
  API_VERSION: v0

jobs:
  ci:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:latest
        env:
          POSTGRES_USER: ${{env.POSTGRES_USER}}
          POSTGRES_DB: ${{env.POSTGRES_DB}}
          POSTGRES_PASSWORD: ${{env.POSTGRES_PASSWORD}}
        ports:
          - 5432:5432
        # needed because the postgres container does not provide a healthcheck
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5
    steps:
    - uses: actions/checkout@v2
    - name: Set environment variables
      run: |
        echo "::set-env name=DATABASE_URL::postgres://${{env.POSTGRES_USER}}:${{env.POSTGRES_PASSWORD}}@${{env.POSTGRES_HOST}}:${{env.POSTGRES_PORT}}/${{env.POSTGRES_DB}}"
        echo "::set-env name=ROCKET_DATABASES::{quantiz_db={url="postgres://${{env.POSTGRES_USER}}:${{env.POSTGRES_PASSWORD}}@${{env.POSTGRES_HOST}}:${{env.POSTGRES_PORT}}/${{env.POSTGRES_DB}}"}}"
    - name: Install latest nightly
      uses: actions-rs/toolchain@v1
      with:
          toolchain: nightly
          components: clippy
          override: true
    - name: Build
      uses: actions-rs/cargo@v1
      with:
        command: build
        args: --verbose
    - name: Run tests
      uses: actions-rs/cargo@v1
      with:
        command: test
        args: --verbose --no-fail-fast --all-features
      env:
        CARGO_INCREMENTAL: '0'
        RUSTFLAGS: '-Zprofile -Ccodegen-units=1 -Cinline-threshold=0 -Clink-dead-code -Coverflow-checks=off -Zno-landing-pads'
    - id: grcov
      name: Code coverage with grcov
      uses: actions-rs/grcov@v0.1
    - name: Upload Codecov report 
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ${{ steps.grcov.outputs.report }}